on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: rust
          bump-minor-pre-major: true # for pre-1.0.0, breaking changes are a minor bump
          pull-request-header: ":robot: Release ready"
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

  upload-artifacts:
    needs: release-please
    runs-on: ubuntu-latest
    if: needs.release-please.outputs.release_created
    env:
      TARFILE_NAME: timescaledb-backfill-x86_64-linux.tar.gz
      VERSIONED_TARFILE_NAME: timescaledb-backfill-${{ needs.release-please.outputs.tag_name }}-x86_64-linux.tar.gz
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.72.0
          targets: x86_64-unknown-linux-musl

      - run: cargo build --release --target x86_64-unknown-linux-musl

      # By putting the executable in a tar archive, we can ensure that the executable bit remains set on the file, see: https://github.com/actions/upload-artifact#permission-loss
      - name: Prepare tar archive
        run: |
          tar -C target/x86_64-unknown-linux-musl/release -czvf ${TARFILE_NAME} timescaledb-backfill

      - name: Attach the binary to the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload ${{ needs.release-please.outputs.tag_name }} ${TARFILE_NAME}

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::818196790983:role/upload-releases-to-assets.timescale.com
          aws-region: us-east-1

      - name: Upload the binary to assets.timescale.com
        run: |
          aws s3api put-object \
            --acl public-read \
            --bucket assets.timescale.com \
             --key releases/${VERSIONED_TARFILE_NAME} \
             --body ${TARFILE_NAME}
          aws s3api put-object \
            --acl public-read \
            --bucket assets.timescale.com \
             --key releases/${TARFILE_NAME} \
             --body ${TARFILE_NAME}
